html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }

  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    margin-top: 50vh;
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    margin-bottom: 100vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .sub-item{
    padding: 1rem;
    background-color: #ddd;
    border: medium solid #ccc;
  }
  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }

  .grid-explicit{
    display: grid;

    /* Grid de 3 columns x 3 rows */
    grid-template-rows: 2rem 20vh 30%;
    grid-template-columns: 50% 100px 1fr;

    /*Grid de 5 columns x 4rows */
    grid-template-columns: repeat(5,20%);
    grid-template-rows: repeat(4,auto);

    grid-template-rows: repeat(4,25%);
    grid-template-columns: repeat(5,1fr);
    grid-template-rows: repeat(4,1fr);

    /* Grid de 4 columns x 5 rows*/
    grid-template-columns:  20% 30% 30% 20% ;
    grid-template-columns: 20% repeat(2,30%) 20%;
    grid-template-rows: repeat(5,auto);
    
    column-gap:4rem;
    row-gap:2rem;
    /* gap: row column; */
    /* grid-gap:100px 0px; */
    gap: 1vh 1vw;
    gap: 0;
  }

  .grid-explicit .item:nth-child(10){
    /* grid row start */
    /* grid row end */ 
     /* grid column start */
    /* grid column end */ 
    color: cyan;
    grid-row-start: 2;
    
    
    
    grid-row-end: 3;


    grid-column-start: 2;
    grid-column-end: 3;

    grid-row: 2/3;
    
    grid-column: 3/5; 

    grid-area: 2/3/3/5;

    /* grid area: grid-row / grid column */
    /* grid-area: 2/3/3/5 ; */
  }

  .grid-explicit .item:nth-child(12){
    color: cyan;

     grid-row: span 2; 
    grid-column: span 3;
    
  } 

  .grid-explicit .item:nth-child(15){
    color: cyan;
     grid-row: 1 / span 2;
    grid-column: 1 / span 3;
    
  }

  .grid-line-names{
    display: grid;

    /*Grid 3c * 2r*/
    /* grid-template-columns: repeat(3,1fr);
    grid-template-rows: repeat(3,1fr); */
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4]; 
  }

  .grid-line-names .item:nth-child(3){
    color: cyan;
    grid-row: linea-r3 / linea-r4;
    grid-column: linea-c1 / linea-c4;
  }

  .grid-line-names .item:nth-child(6){
    color: red;
    /* grid-row: 2/3;
    grid-column: 1/4; */
    grid-row: linea-r2 / linea-r3;
    grid-column: linea-c1 / linea-c4;

    

  }

  .grid-areas{
    display: grid;
    grid-template-rows: 200px 1fr  1fr 100px;
    grid-template-columns: 1fr 350px ;
    grid-template-areas:
    "header header"
    "content sidebar"
    "content sidebar"
    "footer footer";
  }

  .header{
    grid-area: header;
  }

  .content{
    grid-area: content;
  }

  .sidebar{
    grid-area: sidebar;
  }

  .footer{
    grid-area: footer;
  }


  .grid-implicit{

    width: 40%;
    display: grid;
    
    
    display: grid;
    display: inline-grid;
    grid-template-columns: repeat(4,1fr) ;
    grid-template-rows: repeat(3,200px);
  }


    .grid-flow{
      display: grid;
      /*Grid de 5c x 4r */
      grid-template-columns: repeat(5,1fr);
      grid-template-rows: repeat(3,150px);
      /* grid-auto-flow: column; */
      grid-auto-flow: row;
      grid-auto-rows: 100px;
      grid-auto-flow: column;
      grid-auto-columns: 50px;
    }

    .grid-flow-dense{
      display: grid;
     
      /*grid de 5c x4r */
      grid-template-columns: repeat(5,1fr);
      grid-template-rows: repeat(4,200px);
      
      grid-auto-flow: row dense;
      grid-auto-flow: column dense;

    }

  


    /* .grid-flow-dense .item:nth-child(9){
    
      color: cyan;
      grid-column: span 3;
      grid-row: span 3;
      
    } */

      .grid-flow-dense .item:nth-child(11){
    
      color: cyan;
      grid-column: span 3;
      grid-row: span 3;
      
    } 

    .grid-layers{
      display: grid;
      /* Grid de 4cx4r*/
      grid-template-columns:repeat(4,1fr);
      grid-template-rows: repeat(4,1fr);
    }

    .grid-layers .item:nth-child(1){
      background-color: #DBEA33;
      grid-column: 1/3;
      grid-row: 1/3;
    }

    .grid-layers .item:nth-child(2){
      background-color: #497AF8;
      grid-column: 3/5;
      grid-row: 1/3;
    }

    .grid-layers .item:nth-child(3){
      background-color: #90E971;
      grid-column: 1/3;
      grid-row: 3/5;
    }


    .grid-layers .item:nth-child(4){
      background-color: #F0952A;
      grid-column: 3/5;
      grid-row: 3/5;
    }


    .grid-layers .item:nth-child(5){
      background-color: #C92AF0;
      grid-column: 2/4;
      grid-row: 2/4;
      opacity: .75;
    }

    .grid-order{
      display: grid;
      /* Grid 3c x 2r*/
      grid-template-columns:  repeat(3,1fr);
      grid-template-rows: repeat(2,1fr);
      
    }


    .grid-order .item:nth-child(1){
      /*  default es 0,  valores negativos y positivos
        Mientras mas pequeño el numero mas al inicio, mas grande mas al final*/
      order: 1;
    }

    .grid-order .item:nth-child(2){
      order: 2;
    }


    .grid-order .item:nth-child(5){
      order: -1;
    }

    .grid-align{
      display: grid;
      /* Grid 3c x 2r*/
      grid-template-columns:  repeat(3,200px);
      grid-template-rows: repeat(2,200px);
      /* justify-items  - alinea mis elementos grid en el eje  
      HORIZONTAL X */
      justify-items: stretch;
      justify-items: start;
      justify-items: end;
      justify-items: center;

      /* Align-items : Alinea los elementos grid en el eje vertical Y*/
      align-items: stretch ;
      align-items: start;
      align-items: end;
      align-items: center;
      
    }

    .grid-align .item:nth-child(4){
      justify-self: start ;
      align-self: start;
      
    }

    .grid-align-tracks{
      display: grid;
      /* Grid 3c x 2r*/
      grid-template-columns:  repeat(3,200px);
      grid-template-rows: repeat(2,200px);

      /* justify-content alinea los tracks de la grid
      en el eje horizontal (X) a todo los elementos en forma bloque*/
      justify-content: center;
      align-content: end;
  
     


    }

    .grid-min-max{
      display: grid;
      /* Grid 4c x ?r */
      grid-template-columns: repeat(4,1fr);
      grid-template-columns: repeat(4,minmax(100px,200px));
      grid-template-columns: repeat(4,minmax(min-content,200px));
      grid-template-columns: repeat(4,minmax(100px,min-content));
      grid-template-columns: repeat(4,minmax(100px,max-content));
      grid-template-columns: repeat(4,minmax(max-content,200px));
      grid-template-columns: repeat(4,minmax(min-content,max-content));

    }

    .grid-repeat{
      display: grid;
      /* Grid 4c * 4r */
      grid-template-columns: repeat(4,10% 20% 30% 40%);
      grid-template-columns: repeat(3,10% 20% 30% 40%);
      grid-template-columns: repeat(2,10% 20% 30% 40%);
      grid-template-columns: repeat(1,10% 20% 30% 40%);
      grid-template-rows: repeat(2, 100px 200px);
      grid-auto-flow: row;
      grid-auto-rows: 150px;
    }


    .grid-dynamics{
      
      display: grid;
      /* Grid 4c * ?r */
      grid-template-columns: repeat(4,100px) ;
      /* auto-fill: Rellena la Grid con tracks generados dinámicamente*/
      grid-template-columns: repeat(auto-fill,100px);

      /* auto-fit: Ajusta la grid con los tracks existentes 
      La cuadricula dinamica del responsive se va a formar
      dependiendo del numero de items que tenga*/
      grid-template-columns: repeat(auto-fit,100px);
      grid-template-columns: repeat(auto-fill,minmax(100px,1fr));
      grid-template-columns: repeat(auto-fit,minmax(100px,1fr));
    }

    .grid-responsive{
      display: grid;
      grid-template-columns: repeat(auto-fit,minmax(200px,1fr));
      
    }

    .grid-nested{
      display: grid;
      /* Grid 3c * ?r */
      grid-template-columns: repeat(3,1fr);

    }

    .grid{
      display: grid;
      /* Grid 3c * 4 */
      grid-template-columns: repeat(3,1fr);
      grid-template-rows: repeat(4,1fr);
    }

    .sub-grid{
      /* Pára que la caracteristica de sub-grid funcione hay que hacer lo siguiente*/
      /*
      1) Definir explicitamente el tamaño que ocupará el elemento que aplicará subgrid
      dentro del contenedor padre grid, es decir sus propiedades : grid-column y grid-row
      
      2) Aplicar display grid al elemento que se aplicará subgrid
      3) Aplicar el valor de subgrid a las columnas, a las filas o ambas
      depende de como se requiera
      */
      
      grid-column: span 3;
      grid-row: 1/3;
      display: grid;
      grid-template-columns: subgrid;
      grid-template-rows: subgrid;

      
    }

    .grid-papa{
      display: grid;
      grid-template-columns: repeat(3,1fr);
      grid-template-rows: repeat(4,1fr);
    }

    .grid-hijo-papa{
      display: grid;
      grid-column: span 3;
      grid-row: 1/3;
      grid-template-columns: subgrid;
      grid-template-rows: subgrid;
    }